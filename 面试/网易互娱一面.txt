写string的拷贝构造和赋值运算符
一个端口可以同时绑定TCP和UDP吗
虚函数系列问题
map和unordered_map区别
map的key设置任意的类
python的dict遍历
python的函数如何传不定数量的多个参数
吃鸡缩圈问题，如何在第一个圈内等概率选取新的圈的位置


#include <bits/stdc++.h>
using namespace std;

int longestPalindromeSubseq(string s) {
    if(s.size() < 2) return s.size();

    vector<vector<int>> dp(s.size(), vector<int>(s.size(), 0));
    vector<vector<char>> dp2(s.size(), vector<char>(s.size(), ' '));
    for(int i=s.size()-1; i>=0; i--)
    {
        for(int j=i+1; j<s.size(); j++)
        {
            bool bValid = false;
            if(s[i] == s[j])
            {
                if(dp2[i+1][j-1] != s[j])
                {
                    bValid = true;
                    dp2[i][j] = s[j];
                    dp[i][j] = dp[i+1][j-1] + 2;
                }
            }
            if(!bValid)
            {
                dp[i][j] = max(dp[i+1][j], dp[i][j-1]);
                if(dp[i][j] == dp[i+1][j])
                   dp2[i][j] = dp2[i+1][j];
                else dp2[i][j] = dp2[i][j-1];
            }
        }
    }
    return dp[0].back();
}



class MyString
{
public:
    MyString(){}
    MyString(MyString& other)
    {
        if(!other.data)
        {
            data = nullptr;
            len = other.len;
            return;
        }
        
        data = new char(other.len+1);
        char* temp = other.data;
        while(temp)
        {
            *data++ = *temp++;
        }
        *data = '\0';
        len = other.len;
    }
    
    
    MyString& operator=(MyString& other)
    {
        if(!other.data)
        {
            if(data) delete data;
            data = nullptr;
            len = other.len;
            return *this;
        }
        
        if(data) delete data;
        data = new char(other.len+1);
        char* temp = other.data;
        while(temp)
        {
            *data++ = *temp++;
        }
        *data = '\0';
        len = other.len;
        return *this;
    }
    
private:
    int len;
    char* data;
}



for k in dic.keys():
    dic[k]

int main() {
    
}